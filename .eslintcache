{"/Users/Mirza/Documents/Git/webpack-test/app/component.js":{"size":143,"mtime":1496159702000,"hashOfConfig":"1wvv8eu","results":{"filePath":"/Users/Mirza/Documents/Git/webpack-test/app/component.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/Mirza/Documents/Git/webpack-test/app/index.js":{"size":78,"mtime":1496228897000,"hashOfConfig":"1wvv8eu","results":{"filePath":"/Users/Mirza/Documents/Git/webpack-test/app/index.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/Mirza/Documents/Git/webpack-test/webpack.config.js":{"size":1595,"mtime":1496229280000,"hashOfConfig":"1wvv8eu","results":{"filePath":"/Users/Mirza/Documents/Git/webpack-test/webpack.config.js","messages":[],"errorCount":0,"warningCount":0,"output":"const path = require('path');\nconst HtmlWebpackPlugin = require('html-webpack-plugin');\n\nconst PATHS = {\n  app: path.join(__dirname, 'app'),\n  build: path.join(__dirname, 'build'),\n};\n\nconst commonConfig = {\n  entry: {\n    app: PATHS.app,\n  },\n  output: {\n    path: PATHS.build,\n    filename: '[name].js',\n  },\n  plugins: [\n    new HtmlWebpackPlugin({\n      title: 'Webpack demo',\n    }),\n  ],\n};\n\nconst productionConfig = () => commonConfig;\n\nconst developmentConfig = () => {\n  const config = {\n    devServer: {\n      overlay: {\n        errors: true,\n        warnings: true,\n      },\n      // Enable history API fallback so HTML5 History API based\n      // routing works. Good for complex setups.\n      historyApiFallback: true,\n\n      // Display only errors to reduce the amount of output.\n      stats: 'errors-only',\n\n      // Parse host and port from env to allow customization.\n      // If you use Docker, Vagrant or Cloud9, set\n      // host: options.host || '0.0.0.0';\n      //\n      // 0.0.0.0 is available to all network devices\n      // unlike default `localhost`.\n      host: process.env.HOST, // Defaults to `localhost`\n      port: process.env.PORT, // Defaults to 8080\n    },\n    module: {\n      rules: [\n        {\n          test: /\\.js$/,\n          enforce: 'pre',\n\n          loader: 'eslint-loader',\n          options: {\n            emitWarning: true,\n          },\n        },\n      ],\n    },\n  };\n\n  return Object.assign(\n    {},\n    commonConfig,\n    config\n  );\n};\n\nmodule.exports = (env) => {\n  if (env === 'production') {\n    return productionConfig();\n  }\n\n  return developmentConfig();\n};\n"}}}